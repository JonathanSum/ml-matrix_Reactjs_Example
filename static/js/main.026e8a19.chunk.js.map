{"version":3,"sources":["component/p5.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["svd","V","U","clicked","N","A","bases","norm","red","green","blue_orange","P5","x","y","setup","p5","parent","w","Math","min","window","innerWidth","h","innerHeight","createCanvas","cx","width","cy","height","n","cos","PI","sin","compute_singular_vectors","button","createButton","position","mousePressed","reset","style","draw","background","fill","i","sx","data","s","sy","det","d","noStroke","ellipse","stroke","line","mult","ux","uy","vx","vy","length","this","Component","mlMatrix","SVD","Matrix","diag","mmul","transpose","to1DArray","map","u","toFixed","toString","determinant","v","App","useEffect","script","document","createElement","src","async","body","appendChild","removeChild","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.026e8a19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nlet V = []\r\nlet U = []\r\nlet clicked = []\r\nlet e_values = [1, 1]\r\n// 2 bases, 2 left-singular vectors, 2 e'evectors\r\nlet locked = [false, false, false, false, false, false]\r\nlet N = 16\r\nlet A = []\r\nconst bases = [0, 12]\r\nconst norm = 50\r\nlet s_values = [[norm, 0], [0, -norm]]\r\nlet svd\r\n\r\nconst red = '#fb8072'\r\nconst green = '#b3de69'\r\nconst orange = '#fdb462'\r\nconst blue = '#80b1d3'\r\nconst blue_orange = [blue, orange]\r\n\r\n\r\nexport default class P5 extends Component {\r\n    x = 50\r\n    y = 50\r\n\r\n    setup = (p5, parent) => {\r\n        const w = Math.min(window.innerWidth, 600)\r\n        const h = Math.min(window.innerHeight, 400)\r\n        // p5.createCanvas(600, 400).parent(parent)\r\n        // console.log(w, h)\r\n        p5.createCanvas(w, h).parent(parent);\r\n        // Centre coordinates\r\n        p5.cx = p5.width / 2;\r\n        p5.cy = p5.height / 2;\r\n        for (let n = 0; n < N; n++) {\r\n            V[n] = [];\r\n            V[n][0] = norm * p5.cos(n * 2 * p5.PI / N);\r\n            V[n][1] = norm * p5.sin(n * 2 * p5.PI / N);\r\n            U[n] = [...V[n]];\r\n        }\r\n        A[0] = [1, 0]\r\n        A[1] = [0, 1]\r\n\r\n        compute_singular_vectors()\r\n\r\n        // Create reset button\r\n        p5.button = p5.createButton('Reset')\r\n\r\n\r\n        p5.button.position(0, p5.height - 20)\r\n        p5.button.mousePressed(p5.reset)\r\n        p5.button.style('background-color', 'black')\r\n        p5.button.style('color', '#bbbbbb')\r\n        p5.button.style('border', 'none')\r\n    }\r\n    draw = p5 => {\r\n        p5.background(\"black\")\r\n        p5.fill(\"#bbbbbb\")\r\n        for (let i = 0; i < 2; i++) {\r\n            p5.sx = svd.U.data[i][0] * svd.s[i] * norm + p5.cx\r\n            p5.sy = -svd.U.data[i][1] * svd.s[i] * norm * p5.det + p5.cy\r\n            p5.d = 10; p5.fill(blue_orange[i]); p5.noStroke()\r\n            p5.ellipse(p5.sx, p5.sy, p5.d)\r\n            p5.stroke(blue_orange[i])\r\n            p5.line(p5.sx, p5.sy, 2 * p5.cx - p5.sx, 2 * p5.cy - p5.sy)\r\n        }\r\n\r\n        for (let n = 0; n < N; n++) {\r\n            // Update u vectors\r\n            U[n] = mult(V[n])\r\n\r\n            // Move u and v to the centre\r\n            p5.ux = U[n][0] + p5.cx\r\n            p5.uy = U[n][1] + p5.cy\r\n            p5.vx = V[n][0] + p5.cx\r\n            p5.vy = V[n][1] + p5.cy\r\n\r\n            // Draw the input points in grey\r\n            // Draw i and j in R and G\r\n            p5.fill('grey')\r\n            switch (n) {\r\n                case bases[0]: p5.fill(red); break\r\n                case bases[1]: p5.fill(green); break\r\n            }\r\n            p5.d = 5\r\n            p5.noStroke()\r\n            p5.ellipse(p5.vx, p5.vy, p5.d)\r\n\r\n            // Set output points in white\r\n            p5.fill('white')\r\n\r\n            // Highlight cicles under the mouse\r\n            // if (dist(mouseX, mouseY, ux, uy) <= 5 && clicked.length < 2)\r\n            //   d = 15;\r\n\r\n            // Draw lines through the e'vectors, set colour and size\r\n            for (let i = 0; i < clicked.length; i++)\r\n                if (clicked[i] == n) {\r\n                    p5.stroke(\"grey\")\r\n                    p5.line(\r\n                        p5.cx - V[n][0] * 10, p5.cy - V[n][1] * 10,\r\n                        p5.cx + V[n][0] * 10, p5.cy + V[n][1] * 10\r\n                    )\r\n                    p5.d = 10\r\n                    p5.fill(181, 223, 108)\r\n                }\r\n\r\n            // Draw i and j in R and G\r\n            switch (n) {\r\n                case bases[0]: p5.d = 10; p5.fill(red); break\r\n                case bases[1]: p5.d = 10; p5.fill(green); break\r\n            }\r\n\r\n\r\n            // Draw output points\r\n            p5.ellipse(p5.ux, p5.uy, p5.d)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Sketch setup={this.setup} draw={this.draw} />\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction compute_singular_vectors() {\r\n    svd = new window.mlMatrix.SVD(A)\r\n    let S = window.mlMatrix.Matrix.diag(svd.s)\r\n    let R = svd.U.mmul(window.mlMatrix.Matrix.diag(svd.s)).mmul(svd.V.transpose())\r\n    let r = R.to1DArray().map(u => u.toFixed(2)).toString()\r\n    let a = A.toString()\r\n    // Fucking determinant!\r\n    let det = window.mlMatrix.determinant(svd.U)\r\n    // console.log(det.toFixed(2))\r\n}\r\n\r\nfunction mult(v) {\r\n    let ux, uy\r\n    ux = A[0][0] * v[0] + A[0][1] * v[1]\r\n    uy = A[1][0] * v[0] + A[1][1] * v[1]\r\n    return [ux, uy]\r\n}\r\n\r\nfunction mousePressed(p5) {\r\n\r\n    // Selecting e'vectors\r\n    // if (clicked.length < 2)\r\n    //   for (let n = 0; n < N; n++) {\r\n    //     vx = V[n][0] + cx\r\n    //     vy = V[n][1] + cy\r\n    //     if (dist(mouseX, mouseY, vx, vy) <= 5 && !clicked.includes(n))\r\n    //       clicked.push(n);\r\n    //   }\r\n\r\n    // Holding on e'vector\r\n    if (clicked.length == 2)\r\n        for (let i = 0; i < 2; i++) {\r\n            p5.ux = U[clicked[i]][0] + p5.cx\r\n            p5.uy = U[clicked[i]][1] + p5.cy\r\n            if (p5.dist(p5.mouseX, p5.mouseY, p5.ux, p5.uy) <= 5)\r\n                locked[i] = true;\r\n        }\r\n\r\n    // Holding on bases vectors\r\n    for (let i = 0; i < 2; i++) {\r\n        p5.ux = U[bases[i]][0] + p5.cx\r\n        p5.uy = U[bases[i]][1] + p5.cy\r\n        if (p5.dist(p5.mouseX, p5.mouseY, p5.ux, p5.uy) <= 5)\r\n            locked[i] = true;\r\n    }\r\n\r\n}\r\n\r\nfunction mouseReleased(p5) {\r\n    for (let i = 0; i < 6; i++)\r\n        locked[i] = false;\r\n\r\n}\r\n\r\nfunction mouseDragged(p5) {\r\n    // for (let i = 0; i < 2; i++)  // Check both e'vectors\r\n    //   if (locked[i]) {           // If I'm clicking on it\r\n    //   //   V[clicked[i]][0] = mouseX - cx\r\n    //   //   V[clicked[i]][1] = mouseY - cy\r\n    //     // d = dist(mouseX, mouseY, cx, cy) / 50\r\n    //     d = ((mouseX - cx) * V[clicked[i]][0] + \r\n    //         (mouseY - cy) * V[clicked[i]][1]) / norm ** 2\r\n    //     e_values[i] = d\r\n    //     // A[i][i] = d\r\n    //   }\r\n    for (let i = 0; i < 2; i++)\r\n        if (locked[i]) {\r\n            A[0][i] = (p5.mouseX - p5.cx) / norm * (-1) ** i\r\n            A[1][i] = (p5.mouseY - p5.cy) / norm * (-1) ** i\r\n            compute_singular_vectors()\r\n        }\r\n}\r\n\r\n\r\nfunction update_matrix() {\r\n    let u1, u2, v1, v2, l1, l2\r\n    u1 = V[clicked[0]][0]\r\n    u2 = V[clicked[0]][1]\r\n    v1 = V[clicked[1]][0]\r\n    v2 = V[clicked[1]][1]\r\n    l1 = e_values[0]\r\n    l2 = e_values[1]\r\n\r\n    let d = u1 * v2 - u2 * v1\r\n    A[0][0] = (v2 * l1 * u1 - u2 * l2 * v1) / d\r\n    A[0][1] = (u1 * l2 * v1 - v1 * l1 * u1) / d\r\n    A[1][0] = (v2 * l1 * u2 - u2 * l2 * v2) / d\r\n    A[1][1] = (u1 * l2 * v2 - v1 * l1 * u2) / d\r\n}\r\n\r\nfunction reset() {\r\n    A[0] = [1, 0]\r\n    A[1] = [0, 1]\r\n    clicked = []\r\n    e_values = [1, 1]\r\n    locked = [false, false]\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport logo from './logo.svg';\nimport './App.css';\nimport Canvas from './component/canvas'\n\nimport React, { useEffect } from 'react'\nimport P5 from './component/p5'\n\n\nimport draw from './draw/draw.js'\n\n\n// const matrix = Matrix.ones(5, 5);\n\n// console.log(matrix.data[0][0])\n\nfunction App() {\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = \"https://unpkg.com/ml-matrix@6.8.0/matrix.umd.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    }\n  }, []);\n  console.log(window)\n  return (\n\n    <div>\n      {/* <Canvas draw={draw} /> */}\n      <P5 />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}